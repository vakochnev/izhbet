#!/usr/bin/env python3
"""
–¢–µ—Å—Ç–æ–≤—ã–π —Å–∫—Ä–∏–ø—Ç –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–∏ publisher.py —Å —Å–æ–∑–¥–∞–Ω–∏–µ–º –ø—Ä–æ–≥–Ω–æ–∑–æ–≤ –∏ –≤–æ—Ä–æ–Ω–∫–æ–π.
"""

import logging
import sys
from datetime import datetime

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
logging.basicConfig(level=logging.INFO, format='%(asctime)s - %(levelname)s - %(message)s')
logger = logging.getLogger(__name__)

def test_publisher_all_time():
    """–¢–µ—Å—Ç–∏—Ä—É–µ—Ç publisher.py ALL_TIME —Å —Å–æ–∑–¥–∞–Ω–∏–µ–º –Ω–æ–≤—ã—Ö –ø—Ä–æ–≥–Ω–æ–∑–æ–≤."""
    print("üß™ –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–ï PUBLISHER.PY ALL_TIME")
    print("=" * 50)
    
    try:
        # –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã–µ –º–æ–¥—É–ª–∏
        from publisher.app import PublisherApp
        
        # –°–æ–∑–¥–∞–µ–º –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ
        app = PublisherApp()
        
        # –ó–∞–ø—É—Å–∫–∞–µ–º —Ä–µ–∂–∏–º ALL_TIME –¥–ª—è 2024 –≥–æ–¥–∞
        print("\\nüöÄ –ó–∞–ø—É—Å–∫ publisher.py ALL_TIME 2024...")
        app.run_with_params('ALL_TIME', '2024')
        
        print("\\n‚úÖ –¢–µ—Å—Ç publisher.py ALL_TIME –∑–∞–≤–µ—Ä—à–µ–Ω —É—Å–ø–µ—à–Ω–æ!")
        
    except Exception as e:
        logger.error(f"‚ùå –û—à–∏–±–∫–∞ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è publisher.py ALL_TIME: {e}")
        import traceback
        traceback.print_exc()

def test_publisher_funnel():
    """–¢–µ—Å—Ç–∏—Ä—É–µ—Ç publisher.py FUNNEL –¥–ª—è –∞–Ω–∞–ª–∏–∑–∞ –≤–æ—Ä–æ–Ω–∫–∏."""
    print("\\nüß™ –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–ï PUBLISHER.PY FUNNEL")
    print("=" * 50)
    
    try:
        # –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã–µ –º–æ–¥—É–ª–∏
        from publisher.app import PublisherApp
        
        # –°–æ–∑–¥–∞–µ–º –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ
        app = PublisherApp()
        
        # –ó–∞–ø—É—Å–∫–∞–µ–º —Ä–µ–∂–∏–º FUNNEL –¥–ª—è 2024 –≥–æ–¥–∞
        print("\\nüöÄ –ó–∞–ø—É—Å–∫ publisher.py FUNNEL 2024...")
        app.run_with_params('FUNNEL', '2024')
        
        print("\\n‚úÖ –¢–µ—Å—Ç publisher.py FUNNEL –∑–∞–≤–µ—Ä—à–µ–Ω —É—Å–ø–µ—à–Ω–æ!")
        
    except Exception as e:
        logger.error(f"‚ùå –û—à–∏–±–∫–∞ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è publisher.py FUNNEL: {e}")
        import traceback
        traceback.print_exc()

def test_funnel_statistics():
    """–¢–µ—Å—Ç–∏—Ä—É–µ—Ç –ø–æ–ª—É—á–µ–Ω–∏–µ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏ –≤–æ—Ä–æ–Ω–∫–∏."""
    print("\\nüß™ –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–ï –°–¢–ê–¢–ò–°–¢–ò–ö–ò –í–û–†–û–ù–ö–ò")
    print("=" * 50)
    
    try:
        from publisher.service import PublisherService
        
        # –°–æ–∑–¥–∞–µ–º —Å–µ—Ä–≤–∏—Å
        service = PublisherService()
        
        # –ü–æ–ª—É—á–∞–µ–º —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É –∑–∞ –ø–æ—Å–ª–µ–¥–Ω–∏–µ 30 –¥–Ω–µ–π
        print("\\nüìä –ü–æ–ª—É—á–µ–Ω–∏–µ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏ –≤–æ—Ä–æ–Ω–∫–∏...")
        stats = service.get_funnel_statistics()
        
        if stats:
            print("‚úÖ –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –ø–æ–ª—É—á–µ–Ω–∞ —É—Å–ø–µ—à–Ω–æ:")
            print(f"  –ü–µ—Ä–∏–æ–¥: {stats.get('period', {})}")
            print(f"  –°–≤–æ–¥–∫–∞: {stats.get('summary', {})}")
            print(f"  –ü–æ —Ç–∏–ø–∞–º: {len(stats.get('by_type', []))} —Ç–∏–ø–æ–≤")
            print(f"  –ü–æ –º–æ–¥–µ–ª—è–º: {len(stats.get('by_model', []))} –º–æ–¥–µ–ª–µ–π")
            print(f"  –ï–∂–µ–¥–Ω–µ–≤–Ω–æ: {len(stats.get('daily', []))} –¥–Ω–µ–π")
        else:
            print("‚ö†Ô∏è –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –Ω–µ –ø–æ–ª—É—á–µ–Ω–∞")
        
        print("\\n‚úÖ –¢–µ—Å—Ç —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏ –≤–æ—Ä–æ–Ω–∫–∏ –∑–∞–≤–µ—Ä—à–µ–Ω!")
        
    except Exception as e:
        logger.error(f"‚ùå –û—à–∏–±–∫–∞ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏ –≤–æ—Ä–æ–Ω–∫–∏: {e}")
        import traceback
        traceback.print_exc()

def check_database_changes():
    """–ü—Ä–æ–≤–µ—Ä—è–µ—Ç –∏–∑–º–µ–Ω–µ–Ω–∏—è –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö."""
    print("\\nüîç –ü–†–û–í–ï–†–ö–ê –ò–ó–ú–ï–ù–ï–ù–ò–ô –í –ë–ê–ó–ï –î–ê–ù–ù–´–•")
    print("=" * 50)
    
    try:
        from config import Session_pool
        from sqlalchemy import text
        
        with Session_pool() as session:
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –∑–∞–ø–∏—Å–µ–π –≤ statistics_optimized
            result = session.execute(text('SELECT COUNT(*) FROM statistics_optimized')).fetchone()
            total_statistics = result[0] if result else 0
            
            result = session.execute(text('SELECT COUNT(*) FROM outcomes')).fetchone()
            total_outcomes = result[0] if result else 0
            
            print(f"üìä –¢–µ–∫—É—â–µ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö:")
            print(f"   statistics_optimized: {total_statistics} –∑–∞–ø–∏—Å–µ–π")
            print(f"   outcomes: {total_outcomes} –∑–∞–ø–∏—Å–µ–π")
            
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–æ—Å–ª–µ–¥–Ω–∏–µ –∑–∞–ø–∏—Å–∏
            result = session.execute(text('''
                SELECT id, forecast_type, model_name, created_at
                FROM statistics_optimized 
                ORDER BY id DESC 
                LIMIT 5
            ''')).fetchall()
            
            print(f"\\nüìã –ü–æ—Å–ª–µ–¥–Ω–∏–µ 5 –∑–∞–ø–∏—Å–µ–π –≤ statistics_optimized:")
            for row in result:
                print(f"   ID: {row[0]}, –¢–∏–ø: {row[1]}, –ú–æ–¥–µ–ª—å: {row[2]}, –°–æ–∑–¥–∞–Ω–æ: {row[3]}")
        
        print("\\n‚úÖ –ü—Ä–æ–≤–µ—Ä–∫–∞ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö –∑–∞–≤–µ—Ä—à–µ–Ω–∞!")
        
    except Exception as e:
        logger.error(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–æ–≤–µ—Ä–∫–∏ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö: {e}")
        import traceback
        traceback.print_exc()

if __name__ == "__main__":
    print("üöÄ –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–ï –ò–ù–¢–ï–ì–†–ê–¶–ò–ò PUBLISHER.PY")
    print("=" * 60)
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –∏–∑–º–µ–Ω–µ–Ω–∏—è –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö –¥–æ —Ç–µ—Å—Ç–æ–≤
    check_database_changes()
    
    # –¢–µ—Å—Ç–∏—Ä—É–µ–º —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É –≤–æ—Ä–æ–Ω–∫–∏
    test_funnel_statistics()
    
    # –¢–µ—Å—Ç–∏—Ä—É–µ–º publisher.py FUNNEL
    test_publisher_funnel()
    
    # –¢–µ—Å—Ç–∏—Ä—É–µ–º publisher.py ALL_TIME
    test_publisher_all_time()
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –∏–∑–º–µ–Ω–µ–Ω–∏—è –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö –ø–æ—Å–ª–µ —Ç–µ—Å—Ç–æ–≤
    check_database_changes()
    
    print("\\nüéâ –í–°–ï –¢–ï–°–¢–´ –ó–ê–í–ï–†–®–ï–ù–´!")
