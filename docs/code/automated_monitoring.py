#!/usr/bin/env python3
"""
–ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏–π –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ –∫–∞—á–µ—Å—Ç–≤–∞ –ø—Ä–æ–≥–Ω–æ–∑–æ–≤.
–ó–∞–ø—É—Å–∫–∞–µ—Ç—Å—è –ø–æ —Ä–∞—Å–ø–∏—Å–∞–Ω–∏—é –¥–ª—è –Ω–µ–ø—Ä–µ—Ä—ã–≤–Ω–æ–≥–æ –æ—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏—è.
"""

import logging
import os
import sys
import schedule
import time
from datetime import datetime

# –î–æ–±–∞–≤–ª—è–µ–º –ø—É—Ç—å –∫ –º–æ–¥—É–ª—è–º
sys.path.append(os.path.dirname(os.path.dirname(os.path.abspath(__file__))))

from monitor_prediction_quality import PredictionQualityMonitor

logging.basicConfig(
    level=logging.INFO,
    format='%(asctime)s - %(levelname)s - %(message)s',
    handlers=[
        logging.StreamHandler(),
        logging.FileHandler('results/monitoring/automated_monitoring.log')
    ]
)
logger = logging.getLogger(__name__)


class AutomatedMonitor:
    """–ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏–π –º–æ–Ω–∏—Ç–æ—Ä –∫–∞—á–µ—Å—Ç–≤–∞ –ø—Ä–æ–≥–Ω–æ–∑–æ–≤."""
    
    def __init__(self):
        self.monitor = PredictionQualityMonitor()
        self.setup_schedule()
    
    def setup_schedule(self):
        """–ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ—Ç —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞."""
        # –ö–∞–∂–¥—ã–µ 6 —á–∞—Å–æ–≤
        schedule.every(6).hours.do(self.run_monitoring_job)
        
        # –ö–∞–∂–¥—ã–π –¥–µ–Ω—å –≤ 9:00
        schedule.every().day.at("09:00").do(self.run_daily_report)
        
        # –ö–∞–∂–¥—É—é –Ω–µ–¥–µ–ª—é –≤ –ø–æ–Ω–µ–¥–µ–ª—å–Ω–∏–∫ –≤ 10:00
        schedule.every().monday.at("10:00").do(self.run_weekly_report)
        
        logger.info('üìÖ –†–∞—Å–ø–∏—Å–∞–Ω–∏–µ –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞ –Ω–∞—Å—Ç—Ä–æ–µ–Ω–æ:')
        logger.info('  - –ö–∞–∂–¥—ã–µ 6 —á–∞—Å–æ–≤: –±–∞–∑–æ–≤—ã–π –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥')
        logger.info('  - –ï–∂–µ–¥–Ω–µ–≤–Ω–æ –≤ 09:00: –¥–Ω–µ–≤–Ω–æ–π –æ—Ç—á–µ—Ç')
        logger.info('  - –ï–∂–µ–Ω–µ–¥–µ–ª—å–Ω–æ –≤ –ø–æ–Ω–µ–¥–µ–ª—å–Ω–∏–∫ –≤ 10:00: –Ω–µ–¥–µ–ª—å–Ω—ã–π –æ—Ç—á–µ—Ç')
    
    def run_monitoring_job(self):
        """–ó–∞–ø—É—Å–∫–∞–µ—Ç –∑–∞–¥–∞—á—É –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞."""
        try:
            logger.info('üîÑ –ó–∞–ø—É—Å–∫ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–≥–æ –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞')
            
            # –ú–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ –∑–∞ –ø–æ—Å–ª–µ–¥–Ω–∏–µ 24 —á–∞—Å–∞
            report_file = self.monitor.run_monitoring_cycle(hours=24)
            
            if report_file:
                logger.info(f'‚úÖ –ú–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ –∑–∞–≤–µ—Ä—à–µ–Ω: {report_file}')
                
                # –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫—Ä–∏—Ç–∏—á–µ—Å–∫–∏–µ –∞–ª–µ—Ä—Ç—ã
                self.check_critical_alerts(report_file)
            else:
                logger.warning('‚ö†Ô∏è –ú–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ –Ω–µ –≤—ã–ø–æ–ª–Ω–µ–Ω - –Ω–µ—Ç –¥–∞–Ω–Ω—ã—Ö')
                
        except Exception as e:
            logger.error(f'‚ùå –û—à–∏–±–∫–∞ –≤ –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–µ: {e}')
    
    def run_daily_report(self):
        """–ó–∞–ø—É—Å–∫–∞–µ—Ç –¥–Ω–µ–≤–Ω–æ–π –æ—Ç—á–µ—Ç."""
        try:
            logger.info('üìä –ì–µ–Ω–µ—Ä–∞—Ü–∏—è –¥–Ω–µ–≤–Ω–æ–≥–æ –æ—Ç—á–µ—Ç–∞')
            
            # –û—Ç—á–µ—Ç –∑–∞ –ø–æ—Å–ª–µ–¥–Ω–∏–µ 24 —á–∞—Å–∞
            report_file = self.monitor.run_monitoring_cycle(hours=24)
            
            if report_file:
                logger.info(f'‚úÖ –î–Ω–µ–≤–Ω–æ–π –æ—Ç—á–µ—Ç –≥–æ—Ç–æ–≤: {report_file}')
                
                # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –ø—Ä–∏ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ—Å—Ç–∏
                self.send_daily_notifications(report_file)
            else:
                logger.warning('‚ö†Ô∏è –î–Ω–µ–≤–Ω–æ–π –æ—Ç—á–µ—Ç –Ω–µ —Å–æ–∑–¥–∞–Ω - –Ω–µ—Ç –¥–∞–Ω–Ω—ã—Ö')
                
        except Exception as e:
            logger.error(f'‚ùå –û—à–∏–±–∫–∞ –≤ –¥–Ω–µ–≤–Ω–æ–º –æ—Ç—á–µ—Ç–µ: {e}')
    
    def run_weekly_report(self):
        """–ó–∞–ø—É—Å–∫–∞–µ—Ç –Ω–µ–¥–µ–ª—å–Ω—ã–π –æ—Ç—á–µ—Ç."""
        try:
            logger.info('üìà –ì–µ–Ω–µ—Ä–∞—Ü–∏—è –Ω–µ–¥–µ–ª—å–Ω–æ–≥–æ –æ—Ç—á–µ—Ç–∞')
            
            # –û—Ç—á–µ—Ç –∑–∞ –ø–æ—Å–ª–µ–¥–Ω–∏–µ 7 –¥–Ω–µ–π
            report_file = self.monitor.run_monitoring_cycle(hours=24*7)
            
            if report_file:
                logger.info(f'‚úÖ –ù–µ–¥–µ–ª—å–Ω—ã–π –æ—Ç—á–µ—Ç –≥–æ—Ç–æ–≤: {report_file}')
                
                # –ê–Ω–∞–ª–∏–∑–∏—Ä—É–µ–º —Ç—Ä–µ–Ω–¥—ã
                self.analyze_weekly_trends(report_file)
            else:
                logger.warning('‚ö†Ô∏è –ù–µ–¥–µ–ª—å–Ω—ã–π –æ—Ç—á–µ—Ç –Ω–µ —Å–æ–∑–¥–∞–Ω - –Ω–µ—Ç –¥–∞–Ω–Ω—ã—Ö')
                
        except Exception as e:
            logger.error(f'‚ùå –û—à–∏–±–∫–∞ –≤ –Ω–µ–¥–µ–ª—å–Ω–æ–º –æ—Ç—á–µ—Ç–µ: {e}')
    
    def check_critical_alerts(self, report_file: str):
        """–ü—Ä–æ–≤–µ—Ä—è–µ—Ç –∫—Ä–∏—Ç–∏—á–µ—Å–∫–∏–µ –∞–ª–µ—Ä—Ç—ã."""
        try:
            # –ß–∏—Ç–∞–µ–º –æ—Ç—á–µ—Ç
            with open(report_file, 'r', encoding='utf-8') as f:
                report_content = f.read()
            
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫—Ä–∏—Ç–∏—á–µ—Å–∫–∏–µ –∞–ª–µ—Ä—Ç—ã
            if 'üî¥ –ö–†–ò–¢–ò–ß–ï–°–ö–ò–ï:' in report_content:
                logger.critical('üö® –û–ë–ù–ê–†–£–ñ–ï–ù–´ –ö–†–ò–¢–ò–ß–ï–°–ö–ò–ï –ê–õ–ï–†–¢–´!')
                
                # –ó–¥–µ—Å—å –º–æ–∂–Ω–æ –¥–æ–±–∞–≤–∏—Ç—å –æ—Ç–ø—Ä–∞–≤–∫—É —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π
                # self.send_critical_alert_notification(report_content)
                
        except Exception as e:
            logger.error(f'‚ùå –û—à–∏–±–∫–∞ –ø—Ä–æ–≤–µ—Ä–∫–∏ –∞–ª–µ—Ä—Ç–æ–≤: {e}')
    
    def send_daily_notifications(self, report_file: str):
        """–û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç –¥–Ω–µ–≤–Ω—ã–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è."""
        try:
            # –ó–¥–µ—Å—å –º–æ–∂–Ω–æ –¥–æ–±–∞–≤–∏—Ç—å –æ—Ç–ø—Ä–∞–≤–∫—É email/Slack/Telegram —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π
            logger.info('üìß –î–Ω–µ–≤–Ω—ã–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω—ã')
            
        except Exception as e:
            logger.error(f'‚ùå –û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π: {e}')
    
    def analyze_weekly_trends(self, report_file: str):
        """–ê–Ω–∞–ª–∏–∑–∏—Ä—É–µ—Ç –Ω–µ–¥–µ–ª—å–Ω—ã–µ —Ç—Ä–µ–Ω–¥—ã."""
        try:
            logger.info('üìä –ê–Ω–∞–ª–∏–∑ –Ω–µ–¥–µ–ª—å–Ω—ã—Ö —Ç—Ä–µ–Ω–¥–æ–≤ –≤—ã–ø–æ–ª–Ω–µ–Ω')
            
            # –ó–¥–µ—Å—å –º–æ–∂–Ω–æ –¥–æ–±–∞–≤–∏—Ç—å –∞–Ω–∞–ª–∏–∑ —Ç—Ä–µ–Ω–¥–æ–≤ –∫–∞—á–µ—Å—Ç–≤–∞ –ø—Ä–æ–≥–Ω–æ–∑–æ–≤
            
        except Exception as e:
            logger.error(f'‚ùå –û—à–∏–±–∫–∞ –∞–Ω–∞–ª–∏–∑–∞ —Ç—Ä–µ–Ω–¥–æ–≤: {e}')
    
    def run(self):
        """–ó–∞–ø—É—Å–∫–∞–µ—Ç –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏–π –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥."""
        logger.info('üöÄ –ó–∞–ø—É—Å–∫ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–≥–æ –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞ –∫–∞—á–µ—Å—Ç–≤–∞ –ø—Ä–æ–≥–Ω–æ–∑–æ–≤')
        logger.info(f'–í—Ä–µ–º—è –∑–∞–ø—É—Å–∫–∞: {datetime.now().strftime("%Y-%m-%d %H:%M:%S")}')
        
        # –í—ã–ø–æ–ª–Ω—è–µ–º –ø–µ—Ä–≤–æ–Ω–∞—á–∞–ª—å–Ω—ã–π –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥
        self.run_monitoring_job()
        
        # –ó–∞–ø—É—Å–∫–∞–µ–º –æ—Å–Ω–æ–≤–Ω–æ–π —Ü–∏–∫–ª
        while True:
            try:
                schedule.run_pending()
                time.sleep(60)  # –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫–∞–∂–¥—É—é –º–∏–Ω—É—Ç—É
                
            except KeyboardInterrupt:
                logger.info('üõë –û—Å—Ç–∞–Ω–æ–≤–∫–∞ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–≥–æ –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞')
                break
            except Exception as e:
                logger.error(f'‚ùå –û—à–∏–±–∫–∞ –≤ –æ—Å–Ω–æ–≤–Ω–æ–º —Ü–∏–∫–ª–µ: {e}')
                time.sleep(300)  # –ñ–¥–µ–º 5 –º–∏–Ω—É—Ç –ø—Ä–∏ –æ—à–∏–±–∫–µ


def main():
    """–û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è."""
    # –°–æ–∑–¥–∞–µ–º –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é –¥–ª—è –ª–æ–≥–æ–≤
    os.makedirs('results/monitoring', exist_ok=True)
    
    # –ó–∞–ø—É—Å–∫–∞–µ–º –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏–π –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥
    automated_monitor = AutomatedMonitor()
    automated_monitor.run()


if __name__ == '__main__':
    main()
